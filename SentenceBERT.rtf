{\rtf1\ansi\ansicpg1252\cocoartf2821
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fmodern\fcharset0 Courier;}
{\colortbl;\red255\green255\blue255;\red188\green135\blue186;\red23\green23\blue23;\red202\green202\blue202;
\red212\green212\blue212;\red194\green126\blue101;\red113\green184\blue255;\red212\green214\blue154;\red70\green137\blue204;
\red167\green197\blue152;}
{\*\expandedcolortbl;;\cssrgb\c78824\c61176\c77647;\cssrgb\c11765\c11765\c11765;\cssrgb\c83137\c83137\c83137;
\cssrgb\c86275\c86275\c86275;\cssrgb\c80784\c56863\c47059;\cssrgb\c50980\c77647\c100000;\cssrgb\c86275\c86275\c66667;\cssrgb\c33725\c61176\c83922;
\cssrgb\c70980\c80784\c65882;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs28 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 import\cf4 \strokec4  pandas \cf2 \strokec2 as\cf4 \strokec4  pd\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 import\cf4 \strokec4  numpy \cf2 \strokec2 as\cf4 \strokec4  np\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 import\cf4 \strokec4  matplotlib.pyplot \cf2 \strokec2 as\cf4 \strokec4  plt\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 from\cf4 \strokec4  sentence_transformers \cf2 \strokec2 import\cf4 \strokec4  SentenceTransformer\cf5 \strokec5 ,\cf4 \strokec4  util\cf4 \cb1 \strokec4 \
\
\pard\pardeftab720\partightenfactor0
\cf4 \cb3 \strokec4 model = SentenceTransformer\cf5 \strokec5 (\cf6 \strokec6 'paraphrase-mpnet-base-v2'\cf5 \strokec5 )\cf4 \cb1 \strokec4 \
\
\cf4 \cb3 \strokec4 excel_path = \cf6 \strokec6 'Tunis - GPT 4 - F.xlsx'\cf4 \cb1 \strokec4 \
\cf4 \cb3 \strokec4 df = pd.read_excel\cf5 \strokec5 (\cf4 \strokec4 excel_path\cf5 \strokec5 )\cf4 \cb1 \strokec4 \
\cf4 \cb3 \strokec4 sentence1_column = \cf6 \strokec6 'Original Dialect'\cf4 \cb1 \strokec4 \
\cf4 \cb3 \strokec4 sentence2_column = \cf6 \strokec6 'Translated Dialect'\cf4 \cb1 \strokec4 \
\
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 if\cf4 \strokec4  sentence1_column \cf7 \cb3 \strokec7 not\cf4 \cb3 \strokec4  \cf7 \cb3 \strokec7 in\cf4 \cb3 \strokec4  df.columns \cf7 \cb3 \strokec7 or\cf4 \cb3 \strokec4  sentence2_column \cf7 \cb3 \strokec7 not\cf4 \cb3 \strokec4  \cf7 \cb3 \strokec7 in\cf4 \cb3 \strokec4  df.columns\cf5 \strokec5 :\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3 \strokec4     \cf8 \cb3 \strokec8 print\cf5 \cb3 \strokec5 (\cf6 \strokec6 "Error: Columns not found in the Excel sheet."\cf5 \strokec5 )\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 else\cf5 \strokec5 :\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3 \strokec4     df = df.dropna\cf5 \strokec5 (\cf4 \strokec4 subset=\cf5 \strokec5 [\cf4 \strokec4 sentence1_column\cf5 \strokec5 ,\cf4 \strokec4  sentence2_column\cf5 \strokec5 ])\cf4 \cb1 \strokec4 \
\cf4 \cb3 \strokec4     df = df\cf5 \strokec5 [\cf4 \strokec4 df\cf5 \strokec5 [\cf4 \strokec4 sentence1_column\cf5 \strokec5 ]\cf4 \strokec4  != df\cf5 \strokec5 [\cf4 \strokec4 sentence2_column\cf5 \strokec5 ]]\cf4 \cb1 \strokec4 \
\
\cf4 \cb3 \strokec4     \cf2 \strokec2 if\cf4 \strokec4  \cf7 \cb3 \strokec7 not\cf4 \cb3 \strokec4  df.empty\cf5 \strokec5 :\cf4 \cb1 \strokec4 \
\cf4 \cb3 \strokec4         embeddings1 = model.encode\cf5 \strokec5 (\cf4 \strokec4 df\cf5 \strokec5 [\cf4 \strokec4 sentence1_column\cf5 \strokec5 ]\cf4 \strokec4 .tolist\cf5 \strokec5 (),\cf4 \strokec4  convert_to_tensor=\cf9 \cb3 \strokec9 True\cf5 \cb3 \strokec5 )\cf4 \cb1 \strokec4 \
\cf4 \cb3 \strokec4         embeddings2 = model.encode\cf5 \strokec5 (\cf4 \strokec4 df\cf5 \strokec5 [\cf4 \strokec4 sentence2_column\cf5 \strokec5 ]\cf4 \strokec4 .tolist\cf5 \strokec5 (),\cf4 \strokec4  convert_to_tensor=\cf9 \cb3 \strokec9 True\cf5 \cb3 \strokec5 )\cf4 \cb1 \strokec4 \
\cf4 \cb3 \strokec4         similarities = util.pytorch_cos_sim\cf5 \strokec5 (\cf4 \strokec4 embeddings1\cf5 \strokec5 ,\cf4 \strokec4  embeddings2\cf5 \strokec5 )\cf4 \cb1 \strokec4 \
\
\cf4 \cb3 \strokec4         similarities_list = \cf5 \strokec5 [\cf4 \strokec4 similarity\cf5 \strokec5 [\cf10 \cb3 \strokec10 0\cf5 \cb3 \strokec5 ]\cf4 \strokec4 .item\cf5 \strokec5 ()\cf4 \strokec4  \cf2 \strokec2 for\cf4 \strokec4  similarity \cf7 \cb3 \strokec7 in\cf4 \cb3 \strokec4  similarities\cf5 \strokec5 ]\cf4 \cb1 \strokec4 \
\cf4 \cb3 \strokec4         \cf8 \cb3 \strokec8 print\cf5 \cb3 \strokec5 (\cf6 \strokec6 "min"\cf5 \strokec5 ,\cf4 \strokec4  np.\cf8 \cb3 \strokec8 min\cf5 \cb3 \strokec5 (\cf4 \strokec4 similarities_list\cf5 \strokec5 ))\cf4 \cb1 \strokec4 \
\cf4 \cb3 \strokec4         \cf8 \cb3 \strokec8 print\cf5 \cb3 \strokec5 (\cf6 \strokec6 "mean"\cf5 \strokec5 ,\cf4 \strokec4  np.mean\cf5 \strokec5 (\cf4 \strokec4 similarities_list\cf5 \strokec5 ))\cf4 \cb1 \strokec4 \
\cf4 \cb3 \strokec4         \cf8 \cb3 \strokec8 print\cf5 \cb3 \strokec5 (\cf6 \strokec6 "max"\cf5 \strokec5 ,\cf4 \strokec4  np.\cf8 \cb3 \strokec8 max\cf5 \cb3 \strokec5 (\cf4 \strokec4 similarities_list\cf5 \strokec5 ))\cf4 \cb1 \strokec4 \
\
\cf4 \cb3 \strokec4     \cf2 \strokec2 else\cf5 \strokec5 :\cf4 \cb1 \strokec4 \
\cf4 \cb3 \strokec4         \cf8 \cb3 \strokec8 print\cf5 \cb3 \strokec5 (\cf6 \strokec6 "No valid pairs of sentences found in the Excel sheet."\cf5 \strokec5 )\cf4 \cb1 \strokec4 \
\
}
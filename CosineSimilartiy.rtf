{\rtf1\ansi\ansicpg1252\cocoartf2821
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fmodern\fcharset0 Courier;}
{\colortbl;\red255\green255\blue255;\red188\green135\blue186;\red23\green23\blue23;\red202\green202\blue202;
\red113\green171\blue89;\red212\green212\blue212;\red194\green126\blue101;\red113\green184\blue255;\red212\green214\blue154;
\red67\green192\blue160;\red167\green197\blue152;\red88\green147\blue206;}
{\*\expandedcolortbl;;\cssrgb\c78824\c61176\c77647;\cssrgb\c11765\c11765\c11765;\cssrgb\c83137\c83137\c83137;
\cssrgb\c50980\c71765\c42353;\cssrgb\c86275\c86275\c86275;\cssrgb\c80784\c56863\c47059;\cssrgb\c50980\c77647\c100000;\cssrgb\c86275\c86275\c66667;
\cssrgb\c30588\c78824\c69020;\cssrgb\c70980\c80784\c65882;\cssrgb\c41176\c64706\c84314;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs28 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 import\cf4 \strokec4  pandas \cf2 \strokec2 as\cf4 \strokec4  pd\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 from\cf4 \strokec4  tqdm \cf2 \strokec2 import\cf4 \strokec4  tqdm\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 import\cf4 \strokec4  numpy \cf2 \strokec2 as\cf4 \strokec4  np\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 import\cf4 \strokec4  nltk\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 from\cf4 \strokec4  nltk.tokenize \cf2 \strokec2 import\cf4 \strokec4  TreebankWordTokenizer\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 import\cf4 \strokec4  matplotlib.pyplot \cf2 \strokec2 as\cf4 \strokec4  plt\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 import\cf4 \strokec4  seaborn \cf2 \strokec2 as\cf4 \strokec4  sns\cf4 \cb1 \strokec4 \
\
\pard\pardeftab720\partightenfactor0
\cf5 \cb3 \strokec5 # Download NLTK data\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3 \strokec4 nltk.download\cf6 \strokec6 (\cf7 \strokec7 'punkt'\cf6 \strokec6 )\cf4 \cb1 \strokec4 \
\
\cf4 \cb3 \strokec4 excel_path = \cf7 \strokec7 'Tunis - GPT 4 - F.xlsx'\cf4 \cb1 \strokec4 \
\cf4 \cb3 \strokec4 df = pd.read_excel\cf6 \strokec6 (\cf4 \strokec4 excel_path\cf6 \strokec6 )\cf4 \cb1 \strokec4 \
\cf4 \cb3 \strokec4 sentence1_column = \cf7 \strokec7 'Original Dialect'\cf4 \cb1 \strokec4 \
\cf4 \cb3 \strokec4 sentence2_column = \cf7 \strokec7 'Translated Dialect'\cf4 \cb1 \strokec4 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 if\cf4 \strokec4  sentence1_column \cf8 \cb3 \strokec8 not\cf4 \cb3 \strokec4  \cf8 \cb3 \strokec8 in\cf4 \cb3 \strokec4  df.columns \cf8 \cb3 \strokec8 or\cf4 \cb3 \strokec4  sentence2_column \cf8 \cb3 \strokec8 not\cf4 \cb3 \strokec4  \cf8 \cb3 \strokec8 in\cf4 \cb3 \strokec4  df.columns\cf6 \strokec6 :\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3 \strokec4     \cf9 \cb3 \strokec9 print\cf6 \cb3 \strokec6 (\cf7 \strokec7 "Error: Columns not found in the Excel sheet."\cf6 \strokec6 )\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 else\cf6 \strokec6 :\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3 \strokec4     df = df.dropna\cf6 \strokec6 (\cf4 \strokec4 subset=\cf6 \strokec6 [\cf4 \strokec4 sentence1_column\cf6 \strokec6 ,\cf4 \strokec4  sentence2_column\cf6 \strokec6 ])\cf4 \cb1 \strokec4 \
\
\cf4 \cb3 \strokec4     df = df\cf6 \strokec6 [\cf4 \strokec4 df\cf6 \strokec6 [\cf4 \strokec4 sentence1_column\cf6 \strokec6 ]\cf4 \strokec4  != df\cf6 \strokec6 [\cf4 \strokec4 sentence2_column\cf6 \strokec6 ]]\cf4 \cb1 \strokec4 \
\
\cf4 \cb3 \strokec4     cosine_similarities = \cf6 \strokec6 []\cf4 \cb1 \strokec4 \
\
\cf4 \cb3 \strokec4     arabic_tokenizer = TreebankWordTokenizer\cf6 \strokec6 ()\cf4 \cb1 \strokec4 \
\
\cf4 \cb3 \strokec4     \cf2 \strokec2 for\cf4 \strokec4  _\cf6 \strokec6 ,\cf4 \strokec4  row \cf8 \cb3 \strokec8 in\cf4 \cb3 \strokec4  tqdm\cf6 \strokec6 (\cf4 \strokec4 df.iterrows\cf6 \strokec6 (),\cf4 \strokec4  total=\cf9 \cb3 \strokec9 len\cf6 \cb3 \strokec6 (\cf4 \strokec4 df\cf6 \strokec6 ),\cf4 \strokec4  desc=\cf7 \strokec7 "Calculating Cosine Similarity"\cf6 \strokec6 ):\cf4 \cb1 \strokec4 \
\cf4 \cb3 \strokec4         X = row\cf6 \strokec6 [\cf4 \strokec4 sentence1_column\cf6 \strokec6 ]\cf4 \strokec4 .lower\cf6 \strokec6 ()\cf4 \cb1 \strokec4 \
\cf4 \cb3 \strokec4         Y = row\cf6 \strokec6 [\cf4 \strokec4 sentence2_column\cf6 \strokec6 ]\cf4 \strokec4 .lower\cf6 \strokec6 ()\cf4 \cb1 \strokec4 \
\
\cf4 \cb3 \strokec4         X_list = arabic_tokenizer.tokenize\cf6 \strokec6 (\cf4 \strokec4 X\cf6 \strokec6 )\cf4 \cb1 \strokec4 \
\cf4 \cb3 \strokec4         Y_list = arabic_tokenizer.tokenize\cf6 \strokec6 (\cf4 \strokec4 Y\cf6 \strokec6 )\cf4 \cb1 \strokec4 \
\
\cf4 \cb3 \strokec4         rvector = \cf10 \cb3 \strokec10 set\cf6 \cb3 \strokec6 (\cf4 \strokec4 X_list\cf6 \strokec6 )\cf4 \strokec4 .union\cf6 \strokec6 (\cf10 \cb3 \strokec10 set\cf6 \cb3 \strokec6 (\cf4 \strokec4 Y_list\cf6 \strokec6 ))\cf4 \cb1 \strokec4 \
\
\cf4 \cb3 \strokec4         l1 = \cf6 \strokec6 [\cf11 \cb3 \strokec11 1\cf4 \cb3 \strokec4  \cf2 \strokec2 if\cf4 \strokec4  w \cf8 \cb3 \strokec8 in\cf4 \cb3 \strokec4  X_list \cf2 \strokec2 else\cf4 \strokec4  \cf11 \cb3 \strokec11 0\cf4 \cb3 \strokec4  \cf2 \strokec2 for\cf4 \strokec4  w \cf8 \cb3 \strokec8 in\cf4 \cb3 \strokec4  rvector\cf6 \strokec6 ]\cf4 \cb1 \strokec4 \
\cf4 \cb3 \strokec4         l2 = \cf6 \strokec6 [\cf11 \cb3 \strokec11 1\cf4 \cb3 \strokec4  \cf2 \strokec2 if\cf4 \strokec4  w \cf8 \cb3 \strokec8 in\cf4 \cb3 \strokec4  Y_list \cf2 \strokec2 else\cf4 \strokec4  \cf11 \cb3 \strokec11 0\cf4 \cb3 \strokec4  \cf2 \strokec2 for\cf4 \strokec4  w \cf8 \cb3 \strokec8 in\cf4 \cb3 \strokec4  rvector\cf6 \strokec6 ]\cf4 \cb1 \strokec4 \
\
\cf4 \cb3 \strokec4         c = \cf9 \cb3 \strokec9 sum\cf6 \cb3 \strokec6 (\cf4 \strokec4 i*j \cf2 \strokec2 for\cf4 \strokec4  i\cf6 \strokec6 ,\cf4 \strokec4  j \cf8 \cb3 \strokec8 in\cf4 \cb3 \strokec4  \cf9 \cb3 \strokec9 zip\cf6 \cb3 \strokec6 (\cf4 \strokec4 l1\cf6 \strokec6 ,\cf4 \strokec4  l2\cf6 \strokec6 ))\cf4 \cb1 \strokec4 \
\cf4 \cb3 \strokec4         cosine = c / \cf10 \cb3 \strokec10 float\cf6 \cb3 \strokec6 ((\cf9 \cb3 \strokec9 sum\cf6 \cb3 \strokec6 (\cf4 \strokec4 l1\cf6 \strokec6 )\cf4 \strokec4 *\cf9 \cb3 \strokec9 sum\cf6 \cb3 \strokec6 (\cf4 \strokec4 l2\cf6 \strokec6 ))\cf4 \strokec4 **\cf11 \cb3 \strokec11 0.5\cf6 \cb3 \strokec6 )\cf4 \cb1 \strokec4 \
\cf4 \cb3 \strokec4         cosine_similarities.append\cf6 \strokec6 (\cf4 \strokec4 cosine\cf6 \strokec6 )\cf4 \cb1 \strokec4 \
\
\cf4 \cb3 \strokec4     df\cf6 \strokec6 [\cf7 \strokec7 'Cosine_Similarity'\cf6 \strokec6 ]\cf4 \strokec4  = cosine_similarities\cf4 \cb1 \strokec4 \
\
\cf4 \cb3 \strokec4     avg_similarity = \cf9 \cb3 \strokec9 sum\cf6 \cb3 \strokec6 (\cf4 \strokec4 cosine_similarities\cf6 \strokec6 )\cf4 \strokec4  / \cf9 \cb3 \strokec9 len\cf6 \cb3 \strokec6 (\cf4 \strokec4 cosine_similarities\cf6 \strokec6 )\cf4 \cb1 \strokec4 \
\cf4 \cb3 \strokec4     \cf9 \cb3 \strokec9 print\cf6 \cb3 \strokec6 (\cf12 \cb3 \strokec12 f\cf7 \cb3 \strokec7 "\\nMinimum Cosine Similarity: \cf6 \strokec6 \{\cf4 \strokec4 np.\cf9 \cb3 \strokec9 min\cf6 \cb3 \strokec6 (\cf4 \strokec4 cosine_similarities\cf6 \strokec6 )\cf11 \cb3 \strokec11 :.4f\cf6 \cb3 \strokec6 \}\cf7 \strokec7 "\cf6 \strokec6 )\cf4 \cb1 \strokec4 \
\cf4 \cb3 \strokec4     \cf9 \cb3 \strokec9 print\cf6 \cb3 \strokec6 (\cf12 \cb3 \strokec12 f\cf7 \cb3 \strokec7 "\\nAverage Cosine Similarity: \cf6 \strokec6 \{\cf4 \strokec4 avg_similarity\cf11 \cb3 \strokec11 :.4f\cf6 \cb3 \strokec6 \}\cf7 \strokec7 "\cf6 \strokec6 )\cf4 \cb1 \strokec4 \
\cf4 \cb3 \strokec4     \cf9 \cb3 \strokec9 print\cf6 \cb3 \strokec6 (\cf12 \cb3 \strokec12 f\cf7 \cb3 \strokec7 "\\nMax Cosine Similarity: \cf6 \strokec6 \{\cf4 \strokec4 np.\cf9 \cb3 \strokec9 max\cf6 \cb3 \strokec6 (\cf4 \strokec4 cosine_similarities\cf6 \strokec6 )\cf11 \cb3 \strokec11 :4f\cf6 \cb3 \strokec6 \}\cf7 \strokec7 .\\n"\cf6 \strokec6 )\cf4 \cb1 \strokec4 \
\cf4 \cb3 \strokec4     sns.\cf10 \cb3 \strokec10 set\cf6 \cb3 \strokec6 (\cf4 \strokec4 style=\cf7 \strokec7 "white"\cf6 \strokec6 )\cf4 \cb1 \strokec4 \
\
}